@model RSTracker.Models.Requisition

<ol class="breadcrumb">
    <li class="breadcrumb-item active"><h4>Edit Requisition</h4></li>
</ol>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>Requisition</h4>
        <hr />*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DivisionId, "Division", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("DivisionId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dept, "Dept", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("DeptId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Dept, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubUnit, "SubUnit", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("SubUnitId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubUnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RaisedBy, "RaisedBy", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("RaisedBy", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RaisedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PositionId, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("PositionId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.RequisitionDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.RequisitionDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RequisitionDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SigningDateOfDivisionHead, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.SigningDateOfDivisionHead, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SigningDateOfDivisionHead, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubmissionDateOfReuisitionToHR, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.SubmissionDateOfReuisitionToHR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SubmissionDateOfReuisitionToHR, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApprovalDateOfCEO, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.ApprovalDateOfCEO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApprovalDateOfCEO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequiredBy, "RequiredBy", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("RequiredBy", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RequiredBy, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.VacancyTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.VacancyTypeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VacancyTypeId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.VacancyTypeId, "VacancyTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("VacancyTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VacancyTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastWorkingDay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.LastWorkingDay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastWorkingDay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Save" class="btn btn-default" />*@
            <input type="submit" value="Save" class="btn btn-primary btn-large" />
            || @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-primary" })
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('#LastWorkingDay').datetimepicker({
            format: "DD/MM/YYYY"
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });//Initialise any date pickers


        $('#RequisitionDate').datetimepicker({
            format: "DD/MM/YYYY"
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
            });//Initialise any date pickers

        $('#SigningDateOfDivisionHead').datetimepicker({
            format: "DD/MM/YYYY"
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });//Initialise any date pickers

        $('#SubmissionDateOfReuisitionToHR').datetimepicker({
            format: "DD/MM/YYYY"
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });//Initialise any date pickers

        $('#ApprovalDateOfCEO').datetimepicker({
            format: "DD/MM/YYYY"
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });//Initialise any date pickers

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
        }
    });
</script>
